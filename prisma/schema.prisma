// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ============================================================================
// マスタテーブル群
// ============================================================================

// 勘定科目マスタ
model Account {
  accountCode       String   @id @map("account_code") @db.VarChar(10)
  accountName       String   @map("account_name") @db.VarChar(100)
  accountType       String   @map("account_type") @db.VarChar(20)
  parentAccountCode String?  @map("parent_account_code") @db.VarChar(10)
  isDetail          Boolean  @default(true) @map("is_detail")
  isActive          Boolean  @default(true) @map("is_active")
  sortOrder         Int?     @map("sort_order")
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // 自己参照関係
  parentAccount Account?  @relation("AccountParent", fields: [parentAccountCode], references: [accountCode])
  childAccounts Account[] @relation("AccountParent")

  // 他テーブルとの関係
  subAccounts    SubAccount[]
  journalDetails JournalDetail[]

  @@map("accounts")
}

// 補助科目マスタ
model SubAccount {
  subAccountCode String   @map("sub_account_code") @db.VarChar(15)
  accountCode    String   @map("account_code") @db.VarChar(10)
  subAccountName String   @map("sub_account_name") @db.VarChar(100)
  isActive       Boolean  @default(true) @map("is_active")
  sortOrder      Int?     @map("sort_order")
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // 関係
  account        Account         @relation(fields: [accountCode], references: [accountCode])
  journalDetails JournalDetail[]

  // 複合主キー：勘定科目コード + 補助科目コードで一意
  @@id([accountCode, subAccountCode])
  @@map("sub_accounts")
}

// 取引先マスタ
model Partner {
  partnerCode   String   @id @map("partner_code") @db.VarChar(15)
  partnerName   String   @map("partner_name") @db.VarChar(100)
  partnerKana   String?  @map("partner_kana") @db.VarChar(100)
  partnerType   String   @map("partner_type") @db.VarChar(20)
  postalCode    String?  @map("postal_code") @db.VarChar(8)
  address       String?  @db.VarChar(200)
  phone         String?  @db.VarChar(20)
  email         String?  @db.VarChar(100)
  contactPerson String?  @map("contact_person") @db.VarChar(50)
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // 関係
  journalDetails JournalDetail[]

  @@map("partners")
}

// 分析コードマスタ
model AnalysisCode {
  analysisCode       String   @id @map("analysis_code") @db.VarChar(15)
  analysisName       String   @map("analysis_name") @db.VarChar(100)
  analysisType       String   @map("analysis_type") @db.VarChar(20)
  parentAnalysisCode String?  @map("parent_analysis_code") @db.VarChar(15)
  isActive           Boolean  @default(true) @map("is_active")
  sortOrder          Int?     @map("sort_order")
  createdAt          DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // 自己参照関係
  parentAnalysisCode_rel AnalysisCode?  @relation("AnalysisCodeParent", fields: [parentAnalysisCode], references: [analysisCode])
  childAnalysisCodes     AnalysisCode[] @relation("AnalysisCodeParent")

  // 他テーブルとの関係
  journalDetails JournalDetail[]

  @@map("analysis_codes")
}

// ============================================================================
// 仕訳テーブル群
// ============================================================================

// 仕訳ヘッダテーブル
model JournalHeader {
  journalNumber String   @id @map("journal_number") @db.VarChar(15)
  journalDate   DateTime @map("journal_date") @db.Date
  description   String?  @db.Text
  totalAmount   Decimal  @default(0) @map("total_amount") @db.Decimal(15, 2)
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy     String?  @map("created_by") @db.Uuid

  // 関係
  journalDetails JournalDetail[]

  @@map("journal_headers")
}

// 仕訳明細テーブル
model JournalDetail {
  journalNumber   String   @map("journal_number") @db.VarChar(15)
  lineNumber      Int      @map("line_number")
  debitCredit     String   @map("debit_credit") @db.VarChar(1)
  accountCode     String   @map("account_code") @db.VarChar(10)
  subAccountCode  String?  @map("sub_account_code") @db.VarChar(15)
  partnerCode     String?  @map("partner_code") @db.VarChar(15)
  analysisCode    String?  @map("analysis_code") @db.VarChar(15)
  amount          Decimal  @map("amount") @db.Decimal(15, 2)
  lineDescription String?  @map("line_description") @db.Text
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // 関係
  journalHeader   JournalHeader @relation(fields: [journalNumber], references: [journalNumber], onDelete: Cascade)
  account         Account       @relation(fields: [accountCode], references: [accountCode])
  subAccount      SubAccount?   @relation(fields: [accountCode, subAccountCode], references: [accountCode, subAccountCode])
  partner         Partner?      @relation(fields: [partnerCode], references: [partnerCode])
  analysisCodeRel AnalysisCode? @relation(fields: [analysisCode], references: [analysisCode])

  // 複合主キー
  @@id([journalNumber, lineNumber])
  @@map("journal_details")
}
